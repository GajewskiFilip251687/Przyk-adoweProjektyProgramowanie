# -*- coding: utf-8 -*-
"""KompObliczSieczne9.05.24.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lrQm62Dk9Ze4fa8qBuOqWwq3VgQXWvaf
"""

import numpy as np
import matplotlib.pyplot as plt
import math

# Parametry wejściowe
a = 0
b = 2
eps = 1e-6

# Definicja funkcji f(x)
def f(x):
    return x**2 + np.exp(0.5*x) - 5

# Implementacja metody siecznych
def secant(a, b, eps):
    steps = 0
    sieczne_x = []
    # główny warunek aby użyć tej metody
    if f(a) * f(b) < 0:
        pcurr = a
        pnew = pcurr - f(pcurr) * (b - pcurr) / (f(b) - f(pcurr))
        sieczne_x.append(pcurr)
        steps += 1
        while abs(pnew - pcurr) > eps:
            pcurr = pnew
            pnew = pcurr - f(pcurr) * (b - pcurr) / (f(b) - f(pcurr))
            sieczne_x.append(pcurr)
            steps += 1
        return pnew, steps, sieczne_x
    else:
        print("Metoda siecznych nie działa.")


print("METODA SIECZNYCH DLA F-CJI ROSNĄCEJ I WYPUKŁEJ NA PRZEDZIALE")
# Wywołanie metody siecznych
solution, steps, sieczne_x = secant(a, b, eps)
print(f"Rozwiązaniem równania f(x)=0 w przedziale [{a}, {b}] jest {solution}, znalezione w {steps} krokach.")

# Współrzędne dwóch punktów
x1, y1 = a, f(a)
x2, y2 = b, f(b)
# Obliczenie współczynników równania prostej
a_coef = (y2 - y1) / (x2 - x1)
b_coef = y1 - a * x1

for i in range(steps - 1):
  # Generowanie zakresu x
  secant_x_values = np.linspace(min(x1, x2), max(x1, x2), 100)
  # Obliczenie wartości y na podstawie równania prostej
  secant_y_values = a_coef * secant_x_values + b_coef
  plt.plot([x1, x2], [y1, y2], color='yellow')
  x1, y1 = sieczne_x[i+1], f(sieczne_x[i+1])

# Współrzędne punktów do rysowania wykresu funkcji f
x_values = np.linspace(a, b, 100)
y_values = f(x_values)

# Rysowanie wykresu funkcji f oraz jej przybliżonego miejsca zerowego
plt.plot(x_values, y_values, label='f(x) = x^2 + e^0.5x - 5')
plt.plot([a-0.5, b+0.5], [0, 0], '--', c='k')   #generowanie osi OX
plt.plot([0, 0], [math.ceil(f(a)), math.ceil(f(b))], '--', c='k')   #generowanie osi OY
plt.scatter(solution, f(solution), color='red', label='Wyznaczone miejsce zerowe')
plt.xlabel('x')
plt.ylabel('f(x)')
plt.title('Wykres funkcji f oraz jej miejsce zerowe')
plt.legend()
plt.grid(True)
plt.show()