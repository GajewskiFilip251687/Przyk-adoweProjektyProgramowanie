# -*- coding: utf-8 -*-
"""Polynomials.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZT9jJ25tqhvgZnwgZnNcm9kIW9AeItYb
"""

#from numpy import linspace
import numpy as np
import timeit as tm
import matplotlib.pyplot as plt


def poly1(x):
    return 57 + 91*x - 15*x**2 + 14*x**3 - 47*x**4 + 5*x**5


def poly2(x):
    return 57 + x*(91 + x*(-15 + x*(14 + x*(-47 + 5*x))))


#arg = np.linspace(-1, 1, 100)
#print(f"\n{poly1(arg)}")


left_end = -1
right_end = 1
points_number = 2001
turns = 1000
time1 = 0.
time2 = 0.

arg = np.linspace(left_end, right_end, points_number)

for i in range(turns):
    start_time1 = tm.default_timer()
    poly1(arg)
    calc_time1 = tm.default_timer() - start_time1
    time1 += calc_time1

for i in range(turns):
    start_time2 = tm.default_timer()
    poly2(arg)
    calc_time2 = tm.default_timer() - start_time2
    time2 += calc_time2

print(f"Iloraz czas√≥w obliczania pierwszym i drugim sposobem: {time1/time2}")


polynomial = [poly2(i) for i in range(1, len(arg))]
indices = [k for k in range(1, len(arg))]
plt.plot(indices, polynomial, c='red')
plt.show()

import math as m


def approx_cos1(arg, comp):
  result1 = 1
  for k in range(1, 2 * comp):
    result1 += (-1)**k * (arg ** 2*k) / m.factorial(2*k)
  return result1


def approx_cos2(arg, comp):
  component = 1
  result2 = 1
  num = -arg**2
  for k in range(1, comp + 1):
    component *= num / ((2 * k - 1) * 2 * k)
    result2 += component
  return result2


left_end = -1
right_end = 1
points_number = 2001
turns = 1000
half_deg = 3


print(approx_cos1(0.00001, 10))
print(approx_cos2(0.00001, 10))

arguments = np.linespace(left_end, right_end, points_number)
values1 = np.cos(arguments)
values2 = approx_cos2(arguments, half_deg)

plt.plot(arguments, values1, label='$\cos(x)$')
plt.plot(arguments, values2, label=f'Przyblizenie dla n = {half_deg}')
plt.plot([left_end - 1, right_end + 1], [0, 0], linestyle='-', color='k', linewidth=.7)
plt.plot([0, 0], [-2, 2], linestyle='-', color='k', linewidth=.7)
plt.grid(visible="True", which='both', ls="-.")
plt.legend()
plt.title("Wykres funkcji $\cos(x)$ i jej przyblizenie $\sum_{k=0}^n (-1)^k x^{2k / (2k)}!$")
plt.axis("equal")
plt.show()